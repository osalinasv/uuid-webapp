---
import { cva, type VariantProps } from 'class-variance-authority'
import { cn } from '@/lib/utils'

const octetVariants = cva('uuid-segment rounded py-[1px]', {
  variants: {
    variant: {
      default: 'inline-block -mx-[1px] px-[1px]',
      exploded: 'inline-flex -mx-[1px] px-[1px] gap-x-[4px]',
    },
  },
  defaultVariants: {
    variant: 'default',
  },
})

export type Props = VariantProps<typeof octetVariants> & {
  octets: string[] | number[]
  class?: string
  suffix?: string
}

const { octets, variant, suffix, class: className } = Astro.props as Props
---

<span class={cn(octetVariants({ variant, className }))} tabindex="0"
  >{variant === 'exploded' ? octets.map((o) => <span>{o}</span>) : octets.join('')}</span
>{suffix && <span>{suffix}</span>}
