---
import Button from '@/components/ui/Button.astro'

const themeOptions: Record<string, string> = {
  light: 'Light',
  dark: 'Dark',
  default: 'Default',
}

export const prerender = true
---

<div class='relative' _='on focusout call closeThemeMenuOnBlur(event)'>
  <Button
    id='themeMenuBtn'
    type='button'
    size='icon'
    variant='ghost'
    aria-label='Select theme'
    aria-expanded='false'
    aria-controls='themeMenu'
    _='on click call toggleThemeMenuState()'>
    <svg
      xmlns='http://www.w3.org/2000/svg'
      width='24'
      height='24'
      viewBox='0 0 256 256'
      class='hidden dark:inline-block'
      aria-hidden='true'
      data-icon='ph:moon-stars'>
      <path
        fill='currentColor'
        d='M240 96a8 8 0 0 1-8 8h-16v16a8 8 0 0 1-16 0v-16h-16a8 8 0 0 1 0-16h16V72a8 8 0 0 1 16 0v16h16a8 8 0 0 1 8 8Zm-96-40h8v8a8 8 0 0 0 16 0v-8h8a8 8 0 0 0 0-16h-8v-8a8 8 0 0 0-16 0v8h-8a8 8 0 0 0 0 16Zm72.77 97a8 8 0 0 1 1.43 8A96 96 0 1 1 95.07 37.8a8 8 0 0 1 10.6 9.06a88.07 88.07 0 0 0 103.47 103.47a8 8 0 0 1 7.63 2.67Zm-19.39 14.88c-1.79.09-3.59.14-5.38.14A104.11 104.11 0 0 1 88 64c0-1.79 0-3.59.14-5.38a80 80 0 1 0 109.24 109.24Z'
      ></path>
    </svg>
    <svg
      xmlns='http://www.w3.org/2000/svg'
      width='24'
      height='24'
      viewBox='0 0 256 256'
      class='inline-block dark:hidden'
      aria-hidden='true'
      data-icon='ph:sun'>
      <path
        fill='currentColor'
        d='M120 40V16a8 8 0 0 1 16 0v24a8 8 0 0 1-16 0Zm72 88a64 64 0 1 1-64-64a64.07 64.07 0 0 1 64 64Zm-16 0a48 48 0 1 0-48 48a48.05 48.05 0 0 0 48-48ZM58.34 69.66a8 8 0 0 0 11.32-11.32l-16-16a8 8 0 0 0-11.32 11.32Zm0 116.68l-16 16a8 8 0 0 0 11.32 11.32l16-16a8 8 0 0 0-11.32-11.32ZM192 72a8 8 0 0 0 5.66-2.34l16-16a8 8 0 0 0-11.32-11.32l-16 16A8 8 0 0 0 192 72Zm5.66 114.34a8 8 0 0 0-11.32 11.32l16 16a8 8 0 0 0 11.32-11.32ZM48 128a8 8 0 0 0-8-8H16a8 8 0 0 0 0 16h24a8 8 0 0 0 8-8Zm80 80a8 8 0 0 0-8 8v24a8 8 0 0 0 16 0v-24a8 8 0 0 0-8-8Zm112-88h-24a8 8 0 0 0 0 16h24a8 8 0 0 0 0-16Z'
      ></path>
    </svg>
  </Button>

  <div
    id='themeMenu'
    role='menu'
    data-state='closed'
    class='absolute right-0 top-100% mt-2 z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=open]:fade-in-0 data-[state=open]:zoom-in-95 data-[state=open]:slide-in-from-top-2 data-[state=closing]:animate-out data-[state=closing]:fade-out-0 data-[state=closing]:zoom-out-95 data-[state=closing]:slide-out-from-bottom-2 data-[state=closed]:hidden'
    _="on animationend if @data-state is 'closing' then set @data-state to 'closed' end">
    {
      Object.keys(themeOptions).map((option) => (
        <button
          role='menuitem'
          class='flex w-full select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors hover:bg-accent hover:text-accent-foreground focus-visible:bg-accent focus-visible:text-accent-foreground'
          _={`on click call sendThemeSelectedEvent('${option}')`}>
          {themeOptions[option]}
        </button>
      ))
    }
  </div>
</div>

<script type='text/hyperscript'>
  def closeThemeMenuOnBlur(evt)
    if evt.relatedTarget is null then
      call setThemeMenuState(false)
    end
  end

  def sendThemeSelectedEvent(newValue)
    send cs:themeSelected(theme:newValue)
    call setThemeMenuState(false)
  end

  def toggleThemeMenuState()
    if #themeMenuBtn[@aria-expanded] is 'true' then
      call setThemeMenuState(false)
    else
      call setThemeMenuState(true)
    end
  end

  def setThemeMenuState(expanded)
    set #themeMenuBtn[@aria-expanded] to expanded

    if expanded then
      set #themeMenu[@data-state] to 'open'
    else if #themeMenu[@data-state] is 'open'
      set #themeMenu[@data-state] to 'closing'
    else
      set #themeMenu[@data-state] to 'closed'
    end
  end
</script>
